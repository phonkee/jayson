// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// ResolverExtra is an autogenerated mock type for the ResolverExtra type
type ResolverExtra struct {
	mock.Mock
}

// Args provides a mock function with no fields
func (_m *ResolverExtra) Args() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Args")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Query provides a mock function with no fields
func (_m *ResolverExtra) Query() url.Values {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Query")
	}

	var r0 url.Values
	if rf, ok := ret.Get(0).(func() url.Values); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(url.Values)
		}
	}

	return r0
}

// NewResolverExtra creates a new instance of ResolverExtra. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewResolverExtra(t interface {
	mock.TestingT
	Cleanup(func())
}) *ResolverExtra {
	mock := &ResolverExtra{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
